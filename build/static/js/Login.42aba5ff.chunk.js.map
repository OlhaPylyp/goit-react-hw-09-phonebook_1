{"version":3,"sources":["Components/Login/Login.module.css","Components/Login/Login.jsx"],"names":["module","exports","Login","state","name","email","password","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onLogin","reset","this","className","styles","form_container","form","onSubmit","autoComplete","label","input","type","onChange","span","btn","Component","mapDispatchToProps","login","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,IAAM,qB,mICetJC,E,4MACJC,MAAQ,CACNC,KAAK,GACLC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,cAAlBL,EADY,EACZA,KAAMM,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAE1BE,aAAe,SAACJ,GACdA,EAAEK,iBAYF,EAAKC,MAAMC,QAAQ,EAAKZ,OACxB,EAAKa,S,EAEPA,MAAQ,WACN,OAAO,EAAKL,SAAS,CAAEP,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGxD,WAAU,IAAD,EAC2BW,KAAKd,MAAzBE,GADP,EACCD,KADD,EACOC,OAAOC,EADd,EACcA,SACrB,OACE,qBAAKY,UAAWC,IAAOC,eAAvB,SACE,uBAAMF,UAAWC,IAAOE,KAAMC,SAAUL,KAAKL,aAAcW,aAAa,MAAxE,UACE,wBAAOL,UAAWC,IAAOK,MAAzB,kBAEE,uBACEN,UAAWC,IAAOM,MAClBC,KAAK,QACLtB,KAAK,QACLM,MAAOL,EACPsB,SAAUV,KAAKV,kBAGnB,wBAAOW,UAAWC,IAAOK,MAAzB,UACE,sBAAMN,UAAWC,IAAOS,KAAxB,sBACA,uBACEV,UAAWC,IAAOM,MAClBC,KAAK,WACLtB,KAAK,WACLM,MAAOJ,EACPqB,SAAUV,KAAKV,kBAGnB,wBAAQmB,KAAK,SAASR,UAAWC,IAAOU,IAAxC,4B,GAxDUC,aAgEdC,EAAqB,CACzBhB,QAASiB,KAEIC,sBAAQ,KAAMF,EAAdE,CAAkC/B","file":"static/js/Login.42aba5ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"Login_form_container__2SyRh\",\"form\":\"Login_form__2o6Fv\",\"input\":\"Login_input__1viOV\",\"label\":\"Login_label__9PUJ6\",\"btn\":\"Login_btn__3YQww\"};","import { Component } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../Redux/auth/operation_auth\";\r\n\r\n// import { getAllContacts } from \"../../Redux/Phone/phone_selector\";\r\n// const styles = {\r\n//     form: {\r\n//       width: 320,\r\n//     },\r\n//     label: {\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       marginBottom: 15,\r\n//     },\r\n//   };\r\nclass Login extends Component {\r\n  state = {\r\n    name:\"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const sameName = this.props.items.some(\r\n    //   (item) => item.name === this.state.name\r\n    // );\r\n    // if (sameName) {\r\n    //   window.alert(\r\n    //     `LocalHost:3000 says ${this.state.name} is already in contact`\r\n    //   );\r\n    //   this.reset();\r\n    //   return;\r\n    // }\r\n    this.props.onLogin(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    return this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    return (\r\n      <div className={styles.form_container}>\r\n        <form className={styles.form} onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n          <label className={styles.label}>\r\n            Email\r\n            <input\r\n              className={styles.input}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            <span className={styles.span}>Password</span>\r\n            <input\r\n              className={styles.input}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.btn}>\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  onLogin: login,\r\n};\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}